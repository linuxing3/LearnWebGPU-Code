-- dependencies
package('glfw')
add_deps('cmake')
set_sourcedir(path.join(os.scriptdir(), 'vendor/glfw'))
add_deps("libx11", "libxrandr", "libxrender", "libxinerama", "libxfixes", "libxcursor", "libxi", "libxext")
add_syslinks("dl", "pthread")
add_defines("_GLFW_X11")
on_install(function(package)
    local configs = {}
    table.insert(configs, '-DCMAKE_BUILD_TYPE=' .. (package:debug() and 'Debug' or 'Release'))
    table.insert(configs, '-DBUILD_SHARED_LIBS=' .. (package:config('shared') and 'ON' or 'OFF'))
    table.insert(configs, '-DGLFW_EXPOSE_NATIVE_X11')
    import('package.tools.cmake').install(package, configs)
end)
package_end()

package('webgpu')
add_deps('cmake')
set_sourcedir(path.join(os.scriptdir(), 'vendor/webgpu'))
add_defines('WEBGPU_BACKEND_WGPU')
on_install(function(package)
    local configs = {}
    table.insert(configs, '-DCMAKE_BUILD_TYPE=' .. (package:debug() and 'Debug' or 'Release'))
    table.insert(configs, '-DBUILD_SHARED_LIBS=' .. (package:config('shared') and 'ON' or 'OFF'))
    table.insert(configs, '-DDEV_MODE=On')
    import('package.tools.cmake').install(package, configs)
end)                                                                                                
package_end()

package('glfw3webgpu')
add_deps('cmake')
add_deps('glfw')
add_deps('webgpu')
add_defines('WEBGPU_BACKEND_WGPU')
set_sourcedir(path.join(os.scriptdir(), 'vendor/glfw3webgpu'))
on_install(function(package)
    local configs = {}
    table.insert(configs, '-DCMAKE_BUILD_TYPE=' .. (package:debug() and 'Debug' or 'Release'))
    table.insert(configs, '-DBUILD_SHARED_LIBS=' .. (package:config('shared') and 'ON' or 'OFF'))
    table.insert(configs, '-DGLFW_EXPOSE_NATIVE_X11')
    import('package.tools.cmake').install(package, configs)
end)
package_end()

package('imgui')
add_deps('cmake')
add_deps('glfw')
set_sourcedir(path.join(os.scriptdir(), 'vendor/imgui'))
add_defines('WEBGPU_BACKEND_WGPU')
on_install(function(package)
    local configs = {}
    table.insert(configs, '-DCMAKE_BUILD_TYPE=' .. (package:debug() and 'Debug' or 'Release'))
    table.insert(configs, '-DBUILD_SHARED_LIBS=' .. (package:config('shared') and 'ON' or 'OFF'))
    table.insert(configs, '-DWEBGPU_BACKEND_WGPU=On')
    import('package.tools.cmake').install(package, configs)
end)
package_end()